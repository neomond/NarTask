//
//  VASViewController.swift
//  NarTask
//
//  Created by Nazrin Atayeva on 28.01.24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol VASDisplayLogic: AnyObject {
    func displaySomething(viewModel: VAS.Something.ViewModel)
}

class VASViewController: UIViewController, VASDisplayLogic
{
    var interactor: VASBusinessLogic?
    var router: (NSObjectProtocol & VASRoutingLogic & VASDataPassing)?
    
    var mainView: VASView?
    
    override func loadView() {
        super.loadView()
        self.view = mainView
    }
    
    // MARK: View lifecycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.view = mainView
        self.load()
 
        setupUI()
        setupNavigationBar()
    }
    
    private func setupUI() {
        view.backgroundColor = ColorStyle.bgColor.load()
    }
    
    // MARK: Setup Navigation Bar
    private func setupNavigationBar() {
        self.title = "Əlavə dəyər xidmətləri"
        
        let appearance = UINavigationBarAppearance()
        appearance.configureWithOpaqueBackground()
        let backButton = UIBarButtonItem()
        backButton.title = ""
        navigationController?.navigationBar.topItem?.backBarButtonItem = backButton
        appearance.backgroundColor = UIColor(.white)
        appearance.titleTextAttributes = [.foregroundColor: UIColor.black]
        navigationController?.navigationBar.standardAppearance = appearance
        if #available(iOS 15.0, *) {
            navigationController?.navigationBar.scrollEdgeAppearance = appearance
        }
    }
    
    // MARK: Do something
    func load()
    {
        let request = VAS.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: VAS.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
}
