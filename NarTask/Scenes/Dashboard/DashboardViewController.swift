//
//  DashboardViewController.swift
//  NarTask
//
//  Created by Nazrin Atayeva on 23.01.24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SnapKit

protocol DashboardDisplayLogic: AnyObject {
    func displaySomething(viewModel: Dashboard.Something.ViewModel)
}

class DashboardViewController: UIViewController, DashboardDisplayLogic {
    var interactor: DashboardBusinessLogic?
    var router: (NSObjectProtocol & DashboardRoutingLogic & DashboardDataPassing)?
    
    lazy var mainView: DashboardView = {
        let view = DashboardView()
        view.translatesAutoresizingMaskIntoConstraints = false
        return view
    }()
    
    override func loadView() {
        super.loadView()
        view = UIView()
        view.addSubview(mainView)
        
        mainView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        mainView.collectionView.delegate = self
        mainView.collectionView.dataSource = self
        load()
        
        //        self.dashboardView.collectionView.delegate = self
        //        self.dashboardView.serv.delegate = self
        //
        //        self.dashboardView.collectionView.dataSource = self
        //        self.dashboardView.services.dataSource = self
        
        //        view.backgroundColor = ColorStyle.mainColor.load()
        //        let dbView = DashboardView(frame: CGRect(x: 0, y: (view.bounds.height * 0.155), width: view.bounds.width, height: view.bounds.height * 1))
        //        view.addSubview(dbView)
        //        collectionView.register(StoryCircleCel/*l.self, forCellWithReuseIdentifier: StoryCircleCell.reuseIdentifier)*/
        //        dbView.addSubview(collectionView)
        
        
        //        collectionView.register(ProductCardCell.self, forCellWithReuseIdentifier: ProductCardCell.reuseIdentifier)
        
        //        addConstraints()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func load() {
        let request = Dashboard.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: Dashboard.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

extension DashboardViewController: UICollectionViewDelegate, UICollectionViewDataSource {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return 10
        //        return self.customData.count
        
        //        if collectionView == dashboardView.collectionView {
        //            return
        //        } else {
        //
        //        }
        
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: StoryCircleCell.reuseIdentifier, for: indexPath) as? StoryCircleCell else {
            return UICollectionViewCell()
        }
        
        //        let item = self.customData[indexPath.row]
        //        cell.configure(data: item)
        //        cell.data = item
        cell.imageView.image = UIImage(named: "StoryImage")
        return cell
    }
    
}
